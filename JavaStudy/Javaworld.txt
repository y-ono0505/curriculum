■ 開発

ウォーターフォール開発
→要件定義、外部設計、内部設計、開発、試験、本番稼働、運用といった各工程を時系列に沿って
順に並べ、一つ前の工程が終わったらその成果物をもとに次の工程を始める事です。

アジャイル開発
→ソフトウェアを迅速に、また、状況の変化に柔軟に対応できるように開発する手法の総称です。

マイグレーション
→ソフトウェアやシステム、データなどを別の環境に移転したり、新しい環境に切り替えたりする事です。

デグレーション
→新しいバージョンのソフトウェアの品質が、以前より悪くなる事です。

デプロイ
→主にネットワークを通じて提供されるWebアプリケーションなどのシステム開発工程において、
システムを利用可能な状態にする事です。

コンフリクト
→複数の装置やプログラムなどが同じ資源を同時にう利用しようとして競合状態になってしまう事です。

環境

開発環境（ローカル）
→機器やソフトウェア、システムを開発するために必要な機材やソフトウェアなどの
組み合わせです。

検証環境（ステージング）
→本番環境に条件を限りなく近づけた「最終テスト用に用いる、本番環境と類似のテスト環境」
を指します。

本番環境
→情報システムやソフトウェアの開発で、出来上がった製品を実際にはに稼働させて利用に
供するための施設や機材、ソフトウェアなどを組み合わせた運用環境のことです。

設計書／仕様書

基本設計書
→システムを外から見た時にどういう動きをするかを決めた資料です。

詳細設計書
→基本設計で決定した動きを、どのように実現するかを決めた資料です。

テスト

単体テスト（UT）
→単一の部品（モジュール）を対象に行うテストです。

結合テスト（CT／IT）
→複数の「関数」「モジュール」を組み合わせて、正常に動作するかテストすることです。

総合テスト（ST）
→システムテストのことで、実際の運用形態に沿ってテストします。

エビデンス／証跡
→システム開発などで、最終検証段階においてシステムが発注通りに動作している事を示す
証拠となる書類やデータなどの事をエビデンスです。

データパッチ
→ソフトウェアを構成するプログラムやデータを更新・修正するために、新しい版との相違点
を抜き出したデータのことです。

Access
→機器やソフトウェア、システム、情報などを利用可能な状態にすることを言います。

マクロ
→関連する複数の操作や手順、命令などを一つにまとめ、必要に応じて呼び出すことができるよう
にする機能です。

VBA
→Microsoft社のOfficeに含まれるアプリケーションソフトの拡張機能で、利用者が簡易な
プログラムを記述して実行することで複雑な処理の自動化などを行う事ができるものです。

GAS（Google Apps Script
→Googleが提供しているプログラミング言語です。
利用すれば、Gmail、Googleカレンダー、Googleドライブなど、Googleが提供している
さまざまなサービスを連携して活用する事ができます。

API
→コンピュータプログラムの機能や管理するデータなどを、外部の他のプログラムから
呼び出して利用するための手順やデータ形式などを定めた規約です。

WEB API
→Webサイトに外部のサイトの提供する機能や情報を組み込んだり、アプリケージョンソフト
からWeb上で公開されている機能や情報を利用する際などに用います。

REST API
→REST...分散システムにおいて複数のソフトウェアを連携させるのに適した設計原則です。
RESTと呼ばれる設計原則に従って策定されたもの。
RESTそのものは適用範囲の広い抽象的なモデルだが、一般的にはRESTの考え方をWeb APIに
適用した物です。

SOAP
→異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを
伝え合い、連携して動作するための通信プロトコルの一つです。

Ajax
→Webページを表示した状態のまま、別のページや再読み込みなどを伴わずにWebサーバ側と
通信を行い、動的に表示内容を変更する手法です。
JavaScriptの拡張機能を用います。
非同期通信のこと。

XML
→データの意味や構造を記述するためのマークアップ言語の一つです。

JSON
→JavaScriptにおけるオブフェクトの表記法を応用したデータ形式です。
テキストベースの形式の一つで、多数の要素が複雑な構造で組み合わせられたデータを簡潔な
表記で書き表す事ができます。

ステータスコード（HTTPステータスコード）
→HTMLを表示する前にブラウザが受信する３桁の番号です。

クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
→オリジン...httpやhttpsといった部分にホスト名（ドメイン）それにポートまで含まれた物
がオリジンです。
クロスオリジン...悪意のあるハッカーからインターネットを保護するからです。
CORS...ブラウザがオリジン以外のサーバからデータを取得する仕組みです。

バリデーション
→入力内容や記述内容が要件を満たしているか、妥当性を確認する事です。

データ連携

Daemon
→UNIX系OSでメインメモリ上に常駐して特定の機能を提供するプログラムです。

CRON
→Daemonも一種で、利用者の設定したスケジュールに従って指定されたプログラムを定期的
に起動してくれる物。

バッチ
→複数のプログラムからなる作業において、あらかじめ一連の手順を登録しておき、まとめて
連続的に実行する方式です。

ログ
→起こった出来事についての情報などを一定の形式で時系列に記録・蓄積したデータのことです。

CSV
→データ形式およびファイル形式の一つで、項目をカンマ(,)で区切って列挙した物です。
テキストデータです。

TSV
→複数の項目で構成されるデータを複数件列挙して表現することができる汎用的なデータ形式
の一つで、項目間の区切り文字にタブ文字を用いています。

プルリクエスト（マージリクエスト）
→Gitの操作ではなくGitHubが提供する機能です。
ローカルリポジトリのソースコードの変更・更新をわかりやすく表示し、他の開発者に
通知します。
ローカルリポジトリ...自分のパソコン内のリポジトリ指定したフォルダ内のファイルを
バージョン管理する物。

■ チケット管理ツール

asana
→タスクの見える化ツールです。

Backlog
→今後やる予定の作業や開発する予定のシステムのことです。

Jooto
→株式会社PR TIMESが提供している、クラウド型のプロジェクト・タスク管理ツールです。
ドラッグ・アンド・ドロップで操作できるシンプルなプロジェクト管理を実現しています。

Readmine
→オープンソースのプロジェクト管理ソフトの一つです。
複数人の共同作業における進捗管理や情報共有などができるシステムで、基本的な操作や管理
はWEBブラウザを通じて行う事ができます。

Trello
→チームタスク管理に使える無料のツールで、かんばん方式のタスク管理として多くのユーザー
に使われています。

■ バージョン管理

集中型
→ファイルそのものや変更の履歴などを保存する場所を「リポジトリ」と呼びますが、集中型
は1つのリポジトリを使います。

分散型
→リポジトリを複数持つ事ができ、開発の形態や規模に合わせてソースコードの管理ができます。

Github
→Gitの仕組みを利用して、世界中の人々が自分の作品を保存、公開する事ができるようにした
ウェブサービスの名称です。

Backlog
→プロジェクトの進捗を管理して、課題を見える化するツールです。

SourceTree
→Gitを簡単に使えるようにしたツールでGitの理解も簡単にできる優れたもので、GUI形式で
Gitを使えるツールです。

Tortoise SVN
→Subversionのクライアントで、Windowsのシェルエクステンションとして機能します。
専用のGUIを備えています。
Subversion...著名なオープンソースのバージョン管理システムの一つです。
複数の開発者が共同で一つのソフトウェアを開発する際などに、ソースコードやドキュメント
を管理するのに用いられます。
シェルエクステンション...シェルの機能を拡張するためのインターフェイスです。
シェル...ユーザーからの要求をシステムに伝えるためのユーザーインターフェースです。
インターフェース...

Git Flow
→Gitの機能であるブランチを活用したGitの開発手法でもあり、ツールの名前です。
複数人による長期の開発を行う場合、運用ルールを決めずにGitを採用してしまうと、
コンフリクトが頻繁に起こったりマージのミスが発生したりと、大変なことになるかもしれません。しかし、そうした問題を回避し、最大限にGitを活用する事ができるようになります。
ブランチ...木のように枝分かれした構造のデータ集合などにおいて、要素間を結ぶ繋がりのこと呼びます。
コンフリクト...複数の装置やプログラムなどが同じ資源を同時に利用しようとして競合状態に
なってしまう事を意味します。

master
→同種のものが複数ある場合に、優先されるもの、元になるもの、制御する側のものなどを区別
するために利用される事が多いです。

release
→新しい作品や製品などを公開、発表、発売する事を言います。

develop
→新しい物を作り出す事です。

feature
→製品などを特徴付けて他と差別化する特色や、呼び物として強調される目玉要素のことです。

■ FW／ライブラリ

FW（フレームワーク）
→ある領域のソフトウェアに必要とされる汎用的な機能や基本的な制御構造をまとめた半完成品のことです。
枠組み、骨組み、骨格。

Spring Framework
→Java言語によるソフトウェア開発を支援するフレームワークの一つです。
様々な開発プロジェクトに適用できる汎用的の高さとモジュール化された豊富な機能に定評
があります。

Struts
→Java言語によるソフトウェア開発を支援するフレームワークの一つです。
Jakartaプロジェクトが開発しているオープンソースのソフトウェアで、誰でも自由かつ無償で
利用・改変・再配布できます。

JSF（Java Server 
→Javaの開発元であるOracle社が開発・提供しているもので、その仕様はJava EEに一部として
取り込まれています。
Java EEとは、「Java」におけるAPIなどの機能セットの標準の一つで、サーバ向けや大規模
システム向けの高度な機能をまとめたものです。

ライブラリ
→全体の処理の流れが実装されており、その中の一部の具体的な処理を自分で実装して、はめ込めるようになっているシステム。

Bootstrap
→Web制作者の作業を楽にする目的で作られた、Webサイト構築ようのCSS雛形セットです。
JavaScriptでの動的調整も含まれています。

Flyway
→DBマイグレーションフレームワークです。
複数人でのアプリケーション開発時のDBマイグレーション作業を素早く手軽に行う事が
できます。
DBマイグレーション...既存のシステムやソフトウェアなどを新しいプラットフォームや
システムに移行する事です。

Jackson
→JavaとJSONの相互変換を行うライブラリです。
JavaScriptにおけるオブジェクトの表記法を応用したデータ形式です。
テキストベースの形式の一つで、多数の要素が複雑な構造で組み合わせられたデータを簡潔な
表記で書き表す事ができます。

jQuery
→JavaScriptライブラリの一つです。

Junit
→Java言語で開発されたプログラムの単体テストを行うためのソフトウェアです。

Log4j
→Javaのロギングユーティルティです。
ロギングユーティルティ...起こった出来事についての情報などを一定の形式で時系列に
記録・蓄積する事です。

Lombok
→Java特有の冗長なコードを簡潔にしてくれるオープンソースのライブラリです。

ORM（Object-relational mapping）
→オブジェクト指向言語におけるオブジェクトと、リレーショナルデータベースにおけるレコード
とを対照させる事があります。
リレーショナルデータベース...関係データベースと訳され、データを複数の表として管理し、
表と表の関係を定義することです。


■ 連絡ツール

ChatWork
→ビシネス利用に特化したマルチデバイスのコミュニケーションツールであります。

Slack
→LINEのグループトークのメッセンジャーのようにチーム内でコミュニケーションができる
ビジネスチャットのことです。

IP Messenger
→プロトコルにTCP/IPを利用するメッセンジャーソフトです。

■ Java

Javadoc
→Java言語のソースコードに一定の書式コメントを記述することで、クラスの説明やメソッド
の呼び出し方などの仕様をHTMLなどの文書形式でまとめてくれる仕組みです。

アノテーション
→データやプログラムの中に特殊な記法を用いて埋め込まれた付加情報のことをこのように呼ぶ事が多いです。

メモリ管理
→コンピュータのメモリを管理する事です。

ヒープ
→データ構造の一種で、木構造のうち、親要素が子要素より常に大きいという条件を満たすものです。

GC（ガレッジコレクション）
→コンピュータプログラムの実行環境などを備える機能の一つで、実行中のプログラムが占有していたメモリ領域のうち不要になったものを自動的に解放し、空き領域として再利用できるようにするものです。

GoF
→エーリヒ・ガンマ、リチャード・ヘルム、ラルフ・ジョンソン、ジョン・ブリシディースの
4人を指します。

デザインパターン
→過去のソフトウェア設計者が発見し編み出した設計ノウハウを蓄積し、名前を付け、
再利用しやすいように特定の規約に従ってカタログ化したものです。

■その他

オブジェクト（モノ）指向
→プログラムの機能や役割を区別し、それぞれを部品（オブジェクト）として組み合わせる事で、１つのプログラムを作ります。

バッチ（一束、一群、一団）処理
→一定量の（あるいは一定期間の）データを集め、一括処理するための処理方法です。

コンパイル
→人間が分かる言葉で書いたプログラムのソースコードの中身をコンピュータさんが分かる言葉に翻訳する事。

カバレッジ
→システムテストの話では、テストを全部やると、これだけ確認できるはずだよ。それに対して、「今はこれだけの確認が終わってるよ。」な割合のことです。

プラットホーム
→動かすために必要な、土台となる環境です。
